using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.OracleClient;
using System.Data.SqlClient;
using System.Data;
using System.Data.OleDb;
using System.Runtime.InteropServices;
using Excel = Microsoft.Office.Interop.Excel;
using System.IO;
using ClosedXML.Excel;
using System.Configuration;
using TicketClassLibrary;
using CardClass;

public partial class Card_Upload : System.Web.UI.Page
{
    OracleConnection obj1 = new OracleConnection();
    logger _logger = new logger();
    Card_Module obj2 = new Card_Module();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["USER_NAME"] == null)
        {
            ClientScript.RegisterStartupScript(GetType(), "Load", "<script type='text/javascript'>window.location.href = '../issuelog/Default.aspx'; </script>");
        }
        Label9.Text = grid1.Rows.Count.ToString();
    }
    private void FillGridFromExcelSheet(string FilePath, string ext, string isHader)
    {
        string connectionString = "";
        if (ext == ".xls")
        {   //For Excel 97-03
            connectionString = "Provider=Microsoft.Jet.OLEDB.4.0; Data Source={0};Extended Properties='Excel 8.0;HDR={1}'";
        }
        else if (ext == ".xlsx")
        {    //For Excel 07 and greater
            connectionString = "Provider=Microsoft.ACE.OLEDB.12.0; Data Source={0};Extended Properties='Excel 8.0;HDR={1}'";
        }
        connectionString = String.Format(connectionString, FilePath, isHader);
        OleDbConnection conn = new OleDbConnection(connectionString);
        OleDbCommand cmd = new OleDbCommand();
        OleDbDataAdapter dataAdapter = new OleDbDataAdapter();
        DataTable dt = new DataTable();
        cmd.Connection = conn;
        //Fetch 1st Sheet Name
        conn.Open();
        DataTable dtSchema;
        dtSchema = conn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
        string ExcelSheetName = dtSchema.Rows[0]["TABLE_NAME"].ToString();
        conn.Close();
        //Read all data of fetched Sheet to a Data Table
        conn.Open();
        cmd.CommandText = "SELECT * From [" + ExcelSheetName + "]";
        dataAdapter.SelectCommand = cmd;
        dataAdapter.Fill(dt);
        conn.Close();
        //Bind Sheet Data to GridView
        grid1.Caption = Path.GetFileName(FilePath);
        grid1.DataSource = dt;
        grid1.DataBind();
    }
    protected void btnUpload_Click(object sender, EventArgs e)
    {
        if (FileUploadControl.HasFile)
        {
            string Ext = Path.GetExtension(FileUploadControl.PostedFile.FileName);
            if (Ext == ".xls" || Ext == ".xlsx")
            {
                lblErrorMessage.Visible = false;
                string Name = Path.GetFileName(FileUploadControl.PostedFile.FileName);
                string FolderPath = ConfigurationManager.AppSettings["FolderPath"];
                string FilePath = HttpContext.Current.Server.MapPath(FolderPath + Name);
                FileUploadControl.SaveAs(FilePath);
                FillGridFromExcelSheet(FilePath, Ext, ddlIsHeaderExists.SelectedValue);
                Label9.Text = grid1.Rows.Count.ToString();
            }
            else
            {
                lblErrorMessage.Visible = true;
                lblErrorMessage.InnerText = "Please upload valid Excel File";
                grid1.DataSource = null;
                grid1.DataBind();
            }
        }
    }
    protected void btncancel_Click(object sender, EventArgs e)
    {
        Response.Redirect("~/index.aspx");
    }
    protected void btnsave_Click(object sender, EventArgs e)
    {
        try
        {
            obj2.orac_gridview_db(grid1);
            Response.Write("<script>alert('Uploaded successfully.')</script>");
            FileUploadControl.Enabled = false;
            btnUpload.Enabled = false;
        }
        catch (Exception ex)
        {
            _logger.LogError(ex);

        }
        finally
        {
            obj1.Close();
        }
    }
}